/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test
    void Rolling_the_dice() {
        Library sut = new Library();
        int[] actualIntArray = sut.roll(100);
        for(int num : actualIntArray) {
            assertTrue(num < 7, "Number is not less than 6.");
            assertTrue(num >= 1, "Number is not greater than 0.");
        }
    }
    @Test
    void Check_for_Duplicate() {
        Library sut = new Library();
        boolean isDuplicate = sut.containsDuplicates(sut.roll(7));
        int[] intArray = {1, 2, 3, 4, 5, 6};
        boolean isNotDuplicate = sut.containsDuplicates(intArray);
        assertTrue(isDuplicate);
        assertFalse(isNotDuplicate);
    }

    @Test
    void Get_average_of_array_values() {
        Library sut = new Library();
        int[] exampleArr = {1, 2, 3, 4, 5};
        double average = sut.arrayAverage(sut.roll(3));
        assertTrue(sut.arrayAverage(exampleArr) == 3, "Average should be 3.");
    }

    @Test
    void Get_lowest_average_array() {
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        Library sut = new Library();
        int[] exampleLowest = sut.lowestAverageArray(weeklyMonthTemperatures);
        int[] expectedLowest = {55, 54, 60, 53, 59, 57, 61};
        assertEquals(7, exampleLowest.length, "Length Failing");
        assertArrayEquals(expectedLowest , exampleLowest);

    }
}
